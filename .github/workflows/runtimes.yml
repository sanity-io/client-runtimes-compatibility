---
name: Build Runtimes

on:
  push:
    branches: [main]
    paths:
      - 'runtimes/bun-script/**'
      - 'runtimes/deno-cdn-script/**'
      - 'runtimes/deno-cdn-script/**'
      - 'runtimes/node-cjs-script/**'
      - 'runtimes/node-esm-script/**'
  workflow_dispatch:
  schedule:
    - cron: '30 1 * * *'

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.ref }}
  cancel-in-progress: true

jobs:
  # dump_contexts_to_log:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Dump GitHub context
  #       id: github_context_step
  #       run: echo '${{ toJSON(github) }}'
  #     - name: Dump job context
  #       run: echo '${{ toJSON(job) }}'
  #     - name: Dump steps context
  #       run: echo '${{ toJSON(steps) }}'
  #     - name: Dump runner context
  #       run: echo '${{ toJSON(runner) }}'
  #     - name: Dump strategy context
  #       run: echo '${{ toJSON(strategy) }}'
  #     - name: Dump matrix context
  #       run: echo '${{ toJSON(matrix) }}'

  bun:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        # Bun can specify "--platform": browser | node | bun
        # https://github.com/oven-sh/bun#buntranspiler
        # platform: [browser, node, bun]
        test: [bun-script]
        #bun-version: [0.1.x, '*']
        bun-version: [0.1.x]
    defaults:
      run:
        working-directory: runtimes/${{ matrix.test }}
    name: Bun ${{ matrix.bun-version }} ${{ matrix.test }}
    steps:
      - uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # v3
      - uses: antongolub/action-setup-bun@bc198f5cb868ce282f0a72bdd7da3a06a5387f83 # tag=v1
        with:
          bun-version: ${{ matrix.bun-version }}
      - run: bun install
      - run: bun run test:expected
      - run: bun run test:actual
        timeout-minutes: 1
      - uses: actions/upload-artifact@83fd05a356d7e2593de66fc9913b3002723633cb # tag=v3
        with:
          name: ${{ matrix.test }}-${{ matrix.bun-version }}
          path: runtimes/${{ matrix.test }}/artifacts/*.json
          if-no-files-found: error
          retention-days: 1
      - run: git status

  deno:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        test: [deno-cdn-script, deno-npm-script]

    defaults:
      run:
        working-directory: runtimes/${{ matrix.test }}

    steps:
      - uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # v3
      - uses: actions/setup-node@8c91899e586c5b171469028077307d293428b516 # tag=v3
      - uses: denoland/setup-deno@v1
        with:
          deno-version: vx.x.x
      - run: deno run --allow-env --allow-net --allow-write test.ts
      - uses: actions/upload-artifact@83fd05a356d7e2593de66fc9913b3002723633cb # tag=v3
        with:
          name: ${{ matrix.test }}
          path: runtimes/${{ matrix.test }}/artifacts/*.json
          if-no-files-found: error
          retention-days: 1

  node:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        test: [node-cjs-script, node-esm-script]
        node-version: [lts/-3, lts/-2, lts/-1, lts/*, current]
        exclude:
          - test: node-esm-script
            node-version: lts/-3
    defaults:
      run:
        working-directory: runtimes/${{ matrix.test }}
    name: Node.js ${{ matrix.node-version }} ${{ matrix.test }}
    steps:
      - uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # v3
      - uses: actions/setup-node@8c91899e586c5b171469028077307d293428b516 # tag=v3
        with:
          cache: npm
          check-latest: true
          node-version: ${{ matrix.node-version }}
      - run: npm install
      - run: npm test
      - name: Get Node.js major version
        uses: mathiasvr/command-output@8dbf451add3db114df0114aa5e21a1efef8c5015 # tag=v1
        id: version
        with:
          run: node -e "console.log(process.version.split('.')[0])"
      - uses: actions/upload-artifact@83fd05a356d7e2593de66fc9913b3002723633cb # tag=v3
        with:
          name: ${{ matrix.test }}-${{ steps.version.outputs.stdout }}
          path: runtimes/${{ matrix.test }}/artifacts/*.json
          if-no-files-found: error
          retention-days: 1
      - run: git status

  artifacts:
    runs-on: ubuntu-latest
    # Re-enable when Bun starts working again
    # needs: [bun, deno, node]
    needs: [deno, node]
    name: Commit artifacts to dashboard/public
    if: always()
    # if: github.ref_name == 'main'
    steps:
      - uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # v3
      - uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a # v3
        id: download
        with:
          path: dashboard/public/outputs
      - name: 'Dump download outputs'
        run: echo '${{ toJSON(steps.download.outputs) }}'
      - run: ls -R ${{steps.download.outputs.download-path}}
      - run: git status
      - run: npx prettier --ignore-path .gitignore --write dashboard/public/outputs
      - run: git status
      - uses: EndBug/add-and-commit@61a88be553afe4206585b31aa72387c64295d08b # tag=v9
        if: always()
        with:
          commit: --no-verify
          message: 'chore(artifacts): update outputs'
          default_author: github_actions
          pull: '--rebase --autostash'
